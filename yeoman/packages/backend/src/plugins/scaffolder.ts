import { CatalogClient } from '@backstage/catalog-client'; import { createRouter } from '@backstage/plugin-scaffolder-backend'; import { Router } from 'express'; import type { PluginEnvironment } from '../types'; import { createBuiltinActions } from '@backstage/plugin-scaffolder-backend'; import { ScmIntegrations } from '@backstage/integration'; import { createRunYeomanAction } from '@backstage/plugin-scaffolder-backend-module-yeoman'; export default async function createPlugin(env: PluginEnvironment,): Promise<Router> { const catalogClient = new CatalogClient({ discoveryApi: env.discovery, }); const integrations = ScmIntegrations.fromConfig(env.config); const builtInActions = createBuiltinActions({ integrations, catalogClient, config: env.config, reader: env.reader, }); const actions = [...builtInActions, createRunYeomanAction()]; return await createRouter({ logger: env.logger, config: env.config, database: env.database, reader: env.reader, actions, catalogClient, identity: env.identity, }); }